; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\usb_bsp.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\usb_bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\Libraries\STM32_USB_OTG_Driver\inc -I..\Libraries\STM32_USB_HOST_Library\Core\inc -I..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc -I..\User\usbh_mass_storage -I..\User\fatfs\src -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_HS -DUSE_EMBEDDED_PHY -DSTM32F40XX --omf_browse=..\output\usb_bsp.crf --no_multibyte_chars ..\User\usbh_mass_storage\usb_bsp.c]
                          THUMB

                          AREA ||i.USB_OTG_BSP_ConfigVBUS||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_ConfigVBUS PROC
;;;196    
;;;197    void  USB_OTG_BSP_ConfigVBUS(USB_OTG_CORE_HANDLE *pdev)
000000  4770              BX       lr
;;;198    {
;;;199    	/* 安富莱STM32-V5开发板不支持对外供电的控制 */
;;;200    }
;;;201    
                          ENDP


                          AREA ||i.USB_OTG_BSP_DisableInterrupt||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_DisableInterrupt PROC
;;;107    /* 关闭所有和USB相关的中断  */
;;;108    void USB_OTG_BSP_DisableInterrupt(void)
000000  b508              PUSH     {r3,lr}
;;;109    {
;;;110    	NVIC_InitTypeDef NVIC_InitStructure;
;;;111    
;;;112    	/* 先关闭所有和USB相关的中断 */
;;;113    	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000002  2001              MOVS     r0,#1
000004  f88d0001          STRB     r0,[sp,#1]
;;;114    	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000008  2000              MOVS     r0,#0
00000a  f88d0002          STRB     r0,[sp,#2]
;;;115    	NVIC_InitStructure.NVIC_IRQChannelCmd = DISABLE;
00000e  f88d0003          STRB     r0,[sp,#3]
;;;116    
;;;117    	NVIC_InitStructure.NVIC_IRQChannel = OTG_FS_IRQn;
000012  2043              MOVS     r0,#0x43
000014  f88d0000          STRB     r0,[sp,#0]
;;;118    	NVIC_Init(&NVIC_InitStructure);
000018  4668              MOV      r0,sp
00001a  f7fffffe          BL       NVIC_Init
;;;119    
;;;120    	NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_IRQn;
00001e  204d              MOVS     r0,#0x4d
000020  f88d0000          STRB     r0,[sp,#0]
;;;121    	NVIC_Init(&NVIC_InitStructure);
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       NVIC_Init
;;;122    
;;;123    	NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_EP1_OUT_IRQn;
00002a  204a              MOVS     r0,#0x4a
00002c  f88d0000          STRB     r0,[sp,#0]
;;;124    	NVIC_Init(&NVIC_InitStructure);
000030  4668              MOV      r0,sp
000032  f7fffffe          BL       NVIC_Init
;;;125    
;;;126    	NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_EP1_IN_IRQn;
000036  204b              MOVS     r0,#0x4b
000038  f88d0000          STRB     r0,[sp,#0]
;;;127    	NVIC_Init(&NVIC_InitStructure);
00003c  4668              MOV      r0,sp
00003e  f7fffffe          BL       NVIC_Init
;;;128    }
000042  bd08              POP      {r3,pc}
;;;129    
                          ENDP


                          AREA ||i.USB_OTG_BSP_DriveVBUS||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_DriveVBUS PROC
;;;184    
;;;185    void USB_OTG_BSP_DriveVBUS(USB_OTG_CORE_HANDLE *pdev, uint8_t state)
000000  4770              BX       lr
;;;186    {
;;;187    	/* 安富莱STM32-V5开发板不支持对外供电的控制 */
;;;188    }
;;;189    
                          ENDP


                          AREA ||i.USB_OTG_BSP_EnableInterrupt||, CODE, READONLY, ALIGN=2

                  USB_OTG_BSP_EnableInterrupt PROC
;;;135      */
;;;136    void USB_OTG_BSP_EnableInterrupt(USB_OTG_CORE_HANDLE *pdev)
000000  b5f8              PUSH     {r3-r7,lr}
;;;137    {
000002  4604              MOV      r4,r0
;;;138    	NVIC_InitTypeDef NVIC_InitStructure;
;;;139    
;;;140    	/* 先关闭所有和USB相关的中断 */
;;;141    	USB_OTG_BSP_DisableInterrupt();
000004  f7fffffe          BL       USB_OTG_BSP_DisableInterrupt
;;;142    
;;;143    	/* USB Host */
;;;144    	if (pdev == &USB_OTG_Core)
000008  4810              LDR      r0,|L4.76|
00000a  2600              MOVS     r6,#0
;;;145    	{
;;;146    		NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_IRQn;	/* USE_USB_OTG_HS */
;;;147    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
00000c  2501              MOVS     r5,#1
00000e  4284              CMP      r4,r0                 ;144
000010  d10b              BNE      |L4.42|
000012  204d              MOVS     r0,#0x4d              ;146
000014  f88d0000          STRB     r0,[sp,#0]            ;146
000018  f88d5001          STRB     r5,[sp,#1]
;;;148    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
00001c  f88d6002          STRB     r6,[sp,#2]
;;;149    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;		/* 使能 OTG_HS_IRQn */
000020  f88d5003          STRB     r5,[sp,#3]
;;;150    		NVIC_Init(&NVIC_InitStructure);
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       NVIC_Init
                  |L4.42|
;;;151    	}
;;;152    
;;;153    	/* USB Device */
;;;154    	if (pdev == &USB_OTG_dev)
00002a  4809              LDR      r0,|L4.80|
00002c  4284              CMP      r4,r0
00002e  d10b              BNE      |L4.72|
;;;155    	{
;;;156    		NVIC_InitStructure.NVIC_IRQChannel = OTG_FS_IRQn;
000030  2043              MOVS     r0,#0x43
000032  f88d0000          STRB     r0,[sp,#0]
;;;157    		NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000036  f88d5001          STRB     r5,[sp,#1]
;;;158    		NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
00003a  f88d6002          STRB     r6,[sp,#2]
;;;159    		NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00003e  f88d5003          STRB     r5,[sp,#3]
;;;160    		NVIC_Init(&NVIC_InitStructure);
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       NVIC_Init
                  |L4.72|
;;;161    
;;;162    		#ifdef USB_OTG_HS_DEDICATED_EP1_ENABLED
;;;163    			NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_EP1_OUT_IRQn;
;;;164    			NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
;;;165    			NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
;;;166    			NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;167    			NVIC_Init(&NVIC_InitStructure);
;;;168    
;;;169    			NVIC_InitStructure.NVIC_IRQChannel = OTG_HS_EP1_IN_IRQn;
;;;170    			NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
;;;171    			NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
;;;172    			NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;173    			NVIC_Init(&NVIC_InitStructure);
;;;174    		#endif
;;;175    	}
;;;176    }
000048  bdf8              POP      {r3-r7,pc}
;;;177    
                          ENDP

00004a  0000              DCW      0x0000
                  |L4.76|
                          DCD      USB_OTG_Core
                  |L4.80|
                          DCD      USB_OTG_dev

                          AREA ||i.USB_OTG_BSP_Init||, CODE, READONLY, ALIGN=2

                  USB_OTG_BSP_Init PROC
;;;31       */
;;;32     void USB_OTG_BSP_Init(USB_OTG_CORE_HANDLE *pdev)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;33     {
000004  4606              MOV      r6,r0
;;;34     	GPIO_InitTypeDef GPIO_InitStructure;
;;;35     
;;;36     	/* 相关的GPIO全部切换到输入模式 */
;;;37     	{
;;;38     		RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB, ENABLE);
000006  2101              MOVS     r1,#1
000008  2003              MOVS     r0,#3
00000a  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;39     
;;;40     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 | GPIO_Pin_12;
00000e  f44f50c0          MOV      r0,#0x1800
000012  9000              STR      r0,[sp,#0]
;;;41     		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000014  2503              MOVS     r5,#3
000016  f88d5005          STRB     r5,[sp,#5]
;;;42     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00001a  2400              MOVS     r4,#0
00001c  f88d4004          STRB     r4,[sp,#4]
;;;43     		GPIO_Init(GPIOA, &GPIO_InitStructure);
000020  4669              MOV      r1,sp
000022  481f              LDR      r0,|L5.160|
000024  f7fffffe          BL       GPIO_Init
;;;44     
;;;45     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_14 | GPIO_Pin_15;
000028  03af              LSLS     r7,r5,#14
00002a  9700              STR      r7,[sp,#0]
;;;46     		GPIO_Init(GPIOB, &GPIO_InitStructure);
00002c  f8df8074          LDR      r8,|L5.164|
000030  4669              MOV      r1,sp
000032  4640              MOV      r0,r8
000034  f7fffffe          BL       GPIO_Init
;;;47     	}
;;;48     
;;;49     	/* USB Host */
;;;50     	if (pdev == &USB_OTG_Core)
000038  481b              LDR      r0,|L5.168|
00003a  4286              CMP      r6,r0
00003c  d12e              BNE      |L5.156|
;;;51     	{
;;;52     //		/* 安富莱STM32-V5开发板只使用2根线 PB14/OTG_HS_DM 和 PB15/OTG_HS_DP 接U盘 */
;;;53     //		RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB , ENABLE);
;;;54     
;;;55     //		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_14 | GPIO_Pin_15;
;;;56     
;;;57     //		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;58     //		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
;;;59     //		GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;60     
;;;61     //		GPIO_PinAFConfig(GPIOB,GPIO_PinSource14,GPIO_AF_OTG2_FS) ;
;;;62     //		GPIO_PinAFConfig(GPIOB,GPIO_PinSource15,GPIO_AF_OTG2_FS) ;
;;;63     
;;;64     //		RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_OTG_HS, ENABLE) ;
;;;65     		RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB , ENABLE);
00003e  2101              MOVS     r1,#1
000040  2002              MOVS     r0,#2
000042  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;66     	  
;;;67     	  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_14 | GPIO_Pin_15;
000046  9700              STR      r7,[sp,#0]
;;;68     	  
;;;69     	  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000048  f88d5005          STRB     r5,[sp,#5]
;;;70     	  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
00004c  2002              MOVS     r0,#2
00004e  f88d0004          STRB     r0,[sp,#4]
;;;71     	  GPIO_Init(GPIOB, &GPIO_InitStructure);  
000052  4669              MOV      r1,sp
000054  4640              MOV      r0,r8
000056  f7fffffe          BL       GPIO_Init
;;;72     	  
;;;73     	  GPIO_PinAFConfig(GPIOB,GPIO_PinSource14,GPIO_AF_OTG2_FS) ; 
00005a  220c              MOVS     r2,#0xc
00005c  210e              MOVS     r1,#0xe
00005e  4640              MOV      r0,r8
000060  f7fffffe          BL       GPIO_PinAFConfig
;;;74     	  GPIO_PinAFConfig(GPIOB,GPIO_PinSource15,GPIO_AF_OTG2_FS) ;
000064  220c              MOVS     r2,#0xc
000066  210f              MOVS     r1,#0xf
000068  4640              MOV      r0,r8
00006a  f7fffffe          BL       GPIO_PinAFConfig
;;;75     	  RCC_AHB1PeriphClockCmd( RCC_AHB1Periph_OTG_HS, ENABLE) ;  
00006e  2101              MOVS     r1,#1
000070  0748              LSLS     r0,r1,#29
000072  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;76     	  
;;;77     	  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;//PC10推挽输出		
000076  f44f6580          MOV      r5,#0x400
00007a  9500              STR      r5,[sp,#0]
;;;78       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;//输出功能
00007c  2001              MOVS     r0,#1
00007e  f88d0004          STRB     r0,[sp,#4]
;;;79     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
000082  f88d4006          STRB     r4,[sp,#6]
;;;80       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL; 
000086  f88d4007          STRB     r4,[sp,#7]
;;;81       GPIO_Init(GPIOC, &GPIO_InitStructure);//初始化
00008a  4c08              LDR      r4,|L5.172|
00008c  4669              MOV      r1,sp
00008e  4620              MOV      r0,r4
000090  f7fffffe          BL       GPIO_Init
;;;82       
;;;83       GPIO_SetBits(GPIOC,GPIO_Pin_10);
000094  4629              MOV      r1,r5
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       GPIO_SetBits
                  |L5.156|
;;;84     	}
;;;85     
;;;86     //	/* USB Device */
;;;87     //	if (pdev == &USB_OTG_dev)
;;;88     //	{
;;;89     //		RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA , ENABLE);
;;;90     
;;;91     //		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 | GPIO_Pin_12;
;;;92     
;;;93     //		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;94     //		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
;;;95     //		GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
;;;96     //		GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
;;;97     //		GPIO_Init(GPIOA, &GPIO_InitStructure);
;;;98     
;;;99     //		GPIO_PinAFConfig(GPIOA,GPIO_PinSource11,GPIO_AF_OTG1_FS);
;;;100    //		GPIO_PinAFConfig(GPIOA,GPIO_PinSource12,GPIO_AF_OTG1_FS);
;;;101    
;;;102    //		RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
;;;103    //		RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_OTG_FS, ENABLE);
;;;104    //	}
;;;105    }
00009c  e8bd81fc          POP      {r2-r8,pc}
;;;106    
                          ENDP

                  |L5.160|
                          DCD      0x40020000
                  |L5.164|
                          DCD      0x40020400
                  |L5.168|
                          DCD      USB_OTG_Core
                  |L5.172|
                          DCD      0x40020800

                          AREA ||i.USB_OTG_BSP_mDelay||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_mDelay PROC
;;;219      */
;;;220    void USB_OTG_BSP_mDelay (const uint32_t msec)
000000  f7ffbffe          B.W      Delay_ms
;;;221    {
;;;222    	Delay_ms(msec);
;;;223    }
;;;224    
                          ENDP


                          AREA ||i.USB_OTG_BSP_uDelay||, CODE, READONLY, ALIGN=1

                  USB_OTG_BSP_uDelay PROC
;;;207      */
;;;208    void USB_OTG_BSP_uDelay (const uint32_t usec)
000000  f7ffbffe          B.W      Delay_usS
;;;209    {
;;;210    	Delay_usS(usec);
;;;211    }
;;;212    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\usbh_mass_storage\\usb_bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_bsp_c_9c25e72c____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_usb_bsp_c_9c25e72c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_bsp_c_9c25e72c____REVSH|
#line 144
|__asm___9_usb_bsp_c_9c25e72c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
