; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\main.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\main.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\Libraries\STM32_USB_OTG_Driver\inc -I..\Libraries\STM32_USB_HOST_Library\Core\inc -I..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc -I..\User\usbh_mass_storage -I..\User\fatfs\src -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_HS -DUSE_EMBEDDED_PHY -DSTM32F40XX --omf_browse=..\output\main.crf --no_multibyte_chars ..\User\main.c]
                          THUMB

                          AREA ||i._sys_exit||, CODE, READONLY, ALIGN=1

                  _sys_exit PROC
;;;51         //定义_sys_exit()以避免使用半主机模式      
;;;52         _sys_exit(int x)   
000000  4770              BX       lr
;;;53         {   
;;;54             x = x;   
;;;55         }   
;;;56         //重定向fputc函数  
                          ENDP


                          AREA ||i.fputc||, CODE, READONLY, ALIGN=1

                  fputc PROC
;;;58         //这里使用串口1(USART1)输出printf信息  
;;;59         int fputc(int ch, FILE *f)  
000000  4770              BX       lr
;;;60         {        
;;;61     //        while((USART1->SR&0X40)==0);//等待上一次串口数据发送完成    
;;;62     //        USART1->DR = (u8) ch;        //写DR,串口1将发送数据  
;;;63             return ch;  
;;;64         }  
;;;65         #endif  
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;67     
;;;68     int main(void)
000000  b510              PUSH     {r4,lr}
;;;69     {
;;;70     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_CRC, ENABLE);//开启CRC时钟，STEMWIN授权使用
000002  2101              MOVS     r1,#1
000004  0308              LSLS     r0,r1,#12
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;71     //	RCC_Configuration();
;;;72     	SysTick_Init();
00000a  f7fffffe          BL       SysTick_Init
;;;73     	GPIO_Conf();
00000e  f7fffffe          BL       GPIO_Conf
;;;74     //	TIM1_PWM_Config();
;;;75     //	TIM2_PWM_Config();
;;;76     //	TIM6_Config();
;;;77     //	ADC1_DMA_Init();
;;;78     //	DAC_Config();
;;;79     //	USART_Configuration();
;;;80     //	i2c_CfgGpio();//24C01引脚初始化
;;;81     	TM1650_GPIO_INT();		/*TM1650引脚初始化 */
000012  f7fffffe          BL       TM1650_GPIO_INT
;;;82     	LCD_Initializtion();//液晶屏初始化
000016  f7fffffe          BL       LCD_Initializtion
;;;83     //	EEPROM_READ_Coeff();//读取校准参数
;;;84     	GPIO_ResetBits(GPIOA,GPIO_Pin_2);//关闭风扇
00001a  2104              MOVS     r1,#4
00001c  4805              LDR      r0,|L3.52|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;85     		flag_FAN_ON=0;
000022  4805              LDR      r0,|L3.56|
000024  6801              LDR      r1,[r0,#0]  ; flagG
000026  f0210120          BIC      r1,r1,#0x20
00002a  6001              STR      r1,[r0,#0]  ; flagG
;;;86     	//IWDG_Inte();
;;;87     	MainTask();
00002c  f7fffffe          BL       MainTask
;;;88     }
000030  2000              MOVS     r0,#0
000032  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  |L3.52|
                          DCD      0x40020000
                  |L3.56|
                          DCD      ||area_number.12||

                          AREA ||.data||, DATA, ALIGN=2

                  flagA
                          DCD      0x00000000

                          AREA ||area_number.7||, DATA, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.data||
                  flagB
                          DCD      0x00000000

                          AREA ||area_number.8||, DATA, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.data||
                  flagC
                          DCD      0x00000000

                          AREA ||area_number.9||, DATA, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.data||
                  flagD
                          DCD      0x00000000

                          AREA ||area_number.10||, DATA, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.data||
                  flagE
                          DCD      0x00000000

                          AREA ||area_number.11||, DATA, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.data||
                  flagF
                          DCD      0x00000000

                          AREA ||area_number.12||, DATA, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.data||
                  flagG
                          DCD      0x00000000

                          AREA ||area_number.13||, DATA, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.data||
                  __stdout
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_9275e5e5____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_9275e5e5____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_9275e5e5____REVSH|
#line 144
|__asm___6_main_c_9275e5e5____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
