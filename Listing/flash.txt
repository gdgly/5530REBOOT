; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\flash.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\flash.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\Libraries\STM32_USB_OTG_Driver\inc -I..\Libraries\STM32_USB_HOST_Library\Core\inc -I..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc -I..\User\usbh_mass_storage -I..\User\fatfs\src -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_HS -DUSE_EMBEDDED_PHY -DSTM32F40XX --omf_browse=..\output\flash.crf --no_multibyte_chars ..\drive\flash.c]
                          THUMB

                          AREA ||i.EEPROM_READ_Coeff||, CODE, READONLY, ALIGN=2

                  EEPROM_READ_Coeff PROC
;;;147    //===========================================================================//
;;;148    void EEPROM_READ_Coeff(void)
000000  b570              PUSH     {r4-r6,lr}
;;;149    {
;;;150    /****************测量参数读取*********************/
;;;151    	REG_ReadV_Offset=EEPROM_READ_Byte(0x01);
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       EEPROM_READ_Byte
000008  4ce4              LDR      r4,|L1.924|
00000a  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;152    	REG_ReadV_Offset=REG_ReadV_Offset<<8;
00000c  6820              LDR      r0,[r4,#0]  ; Correct_Strong
00000e  0200              LSLS     r0,r0,#8
000010  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;153    	REG_ReadV_Offset=REG_ReadV_Offset+EEPROM_READ_Byte(0x02);
000012  2002              MOVS     r0,#2
000014  f7fffffe          BL       EEPROM_READ_Byte
000018  6821              LDR      r1,[r4,#0]  ; Correct_Strong
00001a  4408              ADD      r0,r0,r1
00001c  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;154    	REG_ReadV_Offset=REG_ReadV_Offset<<8;
00001e  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000020  0200              LSLS     r0,r0,#8
000022  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;155    	REG_ReadV_Offset=REG_ReadV_Offset+EEPROM_READ_Byte(0x03);
000024  2003              MOVS     r0,#3
000026  f7fffffe          BL       EEPROM_READ_Byte
00002a  6821              LDR      r1,[r4,#0]  ; Correct_Strong
00002c  4408              ADD      r0,r0,r1
00002e  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;156    	REG_ReadV_Offset=REG_ReadV_Offset<<8;
000030  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000032  0200              LSLS     r0,r0,#8
000034  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;157    	REG_ReadV_Offset=REG_ReadV_Offset+EEPROM_READ_Byte(0x04);
000036  2004              MOVS     r0,#4
000038  f7fffffe          BL       EEPROM_READ_Byte
00003c  6821              LDR      r1,[r4,#0]  ; Correct_Strong
00003e  4408              ADD      r0,r0,r1
000040  6020              STR      r0,[r4,#0]  ; Correct_Strong
;;;158    	
;;;159    	REG_ReadV1_Offset=EEPROM_READ_Byte(0x40);
000042  2040              MOVS     r0,#0x40
000044  f7fffffe          BL       EEPROM_READ_Byte
000048  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;160    	REG_ReadV1_Offset=REG_ReadV1_Offset<<8;
00004a  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
00004c  0200              LSLS     r0,r0,#8
00004e  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;161    	REG_ReadV1_Offset=REG_ReadV1_Offset+EEPROM_READ_Byte(0x41);
000050  2041              MOVS     r0,#0x41
000052  f7fffffe          BL       EEPROM_READ_Byte
000056  6a21              LDR      r1,[r4,#0x20]  ; Correct_Strong
000058  4408              ADD      r0,r0,r1
00005a  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;162    	REG_ReadV1_Offset=REG_ReadV1_Offset<<8;
00005c  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
00005e  0200              LSLS     r0,r0,#8
000060  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;163    	REG_ReadV1_Offset=REG_ReadV1_Offset+EEPROM_READ_Byte(0x42);
000062  2042              MOVS     r0,#0x42
000064  f7fffffe          BL       EEPROM_READ_Byte
000068  6a21              LDR      r1,[r4,#0x20]  ; Correct_Strong
00006a  4408              ADD      r0,r0,r1
00006c  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;164    	REG_ReadV1_Offset=REG_ReadV1_Offset<<8;
00006e  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
000070  0200              LSLS     r0,r0,#8
000072  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;165    	REG_ReadV1_Offset=REG_ReadV1_Offset+EEPROM_READ_Byte(0x43);
000074  2043              MOVS     r0,#0x43
000076  f7fffffe          BL       EEPROM_READ_Byte
00007a  6a21              LDR      r1,[r4,#0x20]  ; Correct_Strong
00007c  4408              ADD      r0,r0,r1
00007e  6220              STR      r0,[r4,#0x20]  ; Correct_Strong
;;;166    	
;;;167    	REG_ReadA_Offset=EEPROM_READ_Byte(0x05);
000080  2005              MOVS     r0,#5
000082  f7fffffe          BL       EEPROM_READ_Byte
000086  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;168    	REG_ReadA_Offset=REG_ReadA_Offset<<8;
000088  6860              LDR      r0,[r4,#4]  ; Correct_Strong
00008a  0200              LSLS     r0,r0,#8
00008c  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;169    	REG_ReadA_Offset=REG_ReadA_Offset+EEPROM_READ_Byte(0x06);
00008e  2006              MOVS     r0,#6
000090  f7fffffe          BL       EEPROM_READ_Byte
000094  6861              LDR      r1,[r4,#4]  ; Correct_Strong
000096  4408              ADD      r0,r0,r1
000098  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;170    	REG_ReadA_Offset=REG_ReadA_Offset<<8;
00009a  6860              LDR      r0,[r4,#4]  ; Correct_Strong
00009c  0200              LSLS     r0,r0,#8
00009e  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;171    	REG_ReadA_Offset=REG_ReadA_Offset+EEPROM_READ_Byte(0x07);
0000a0  2007              MOVS     r0,#7
0000a2  f7fffffe          BL       EEPROM_READ_Byte
0000a6  6861              LDR      r1,[r4,#4]  ; Correct_Strong
0000a8  4408              ADD      r0,r0,r1
0000aa  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;172    	REG_ReadA_Offset=REG_ReadA_Offset<<8;
0000ac  6860              LDR      r0,[r4,#4]  ; Correct_Strong
0000ae  0200              LSLS     r0,r0,#8
0000b0  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;173    	REG_ReadA_Offset=REG_ReadA_Offset+EEPROM_READ_Byte(0x08);
0000b2  2008              MOVS     r0,#8
0000b4  f7fffffe          BL       EEPROM_READ_Byte
0000b8  6861              LDR      r1,[r4,#4]  ; Correct_Strong
0000ba  4408              ADD      r0,r0,r1
0000bc  6060              STR      r0,[r4,#4]  ; Correct_Strong
;;;174    	
;;;175    	REG_ReadA1_Offset=EEPROM_READ_Byte(0x33);
0000be  2033              MOVS     r0,#0x33
0000c0  f7fffffe          BL       EEPROM_READ_Byte
0000c4  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;176    	REG_ReadA1_Offset=REG_ReadA1_Offset<<8;
0000c6  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
0000c8  0200              LSLS     r0,r0,#8
0000ca  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;177    	REG_ReadA1_Offset=REG_ReadA1_Offset+EEPROM_READ_Byte(0x34);
0000cc  2034              MOVS     r0,#0x34
0000ce  f7fffffe          BL       EEPROM_READ_Byte
0000d2  68a1              LDR      r1,[r4,#8]  ; Correct_Strong
0000d4  4408              ADD      r0,r0,r1
0000d6  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;178    	REG_ReadA1_Offset=REG_ReadA1_Offset<<8;
0000d8  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
0000da  0200              LSLS     r0,r0,#8
0000dc  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;179    	REG_ReadA1_Offset=REG_ReadA1_Offset+EEPROM_READ_Byte(0x35);
0000de  2035              MOVS     r0,#0x35
0000e0  f7fffffe          BL       EEPROM_READ_Byte
0000e4  68a1              LDR      r1,[r4,#8]  ; Correct_Strong
0000e6  4408              ADD      r0,r0,r1
0000e8  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;180    	REG_ReadA1_Offset=REG_ReadA1_Offset<<8;
0000ea  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
0000ec  0200              LSLS     r0,r0,#8
0000ee  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;181    	REG_ReadA1_Offset=REG_ReadA1_Offset+EEPROM_READ_Byte(0x36);
0000f0  2036              MOVS     r0,#0x36
0000f2  f7fffffe          BL       EEPROM_READ_Byte
0000f6  68a1              LDR      r1,[r4,#8]  ; Correct_Strong
0000f8  4408              ADD      r0,r0,r1
0000fa  60a0              STR      r0,[r4,#8]  ; Correct_Strong
;;;182    	
;;;183    	REG_ReadR_Offset=EEPROM_READ_Byte(0x09);
0000fc  2009              MOVS     r0,#9
0000fe  f7fffffe          BL       EEPROM_READ_Byte
000102  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;184    	REG_ReadR_Offset=REG_ReadR_Offset<<8;
000104  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
000106  0200              LSLS     r0,r0,#8
000108  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;185    	REG_ReadR_Offset=REG_ReadR_Offset+EEPROM_READ_Byte(0x0A);
00010a  200a              MOVS     r0,#0xa
00010c  f7fffffe          BL       EEPROM_READ_Byte
000110  68e1              LDR      r1,[r4,#0xc]  ; Correct_Strong
000112  4408              ADD      r0,r0,r1
000114  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;186    	REG_ReadR_Offset=REG_ReadR_Offset<<8;
000116  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
000118  0200              LSLS     r0,r0,#8
00011a  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;187    	REG_ReadR_Offset=REG_ReadR_Offset+EEPROM_READ_Byte(0x0B);
00011c  200b              MOVS     r0,#0xb
00011e  f7fffffe          BL       EEPROM_READ_Byte
000122  68e1              LDR      r1,[r4,#0xc]  ; Correct_Strong
000124  4408              ADD      r0,r0,r1
000126  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;188    	REG_ReadR_Offset=REG_ReadR_Offset<<8;
000128  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
00012a  0200              LSLS     r0,r0,#8
00012c  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;189    	REG_ReadR_Offset=REG_ReadR_Offset+EEPROM_READ_Byte(0x0C);
00012e  200c              MOVS     r0,#0xc
000130  f7fffffe          BL       EEPROM_READ_Byte
000134  68e1              LDR      r1,[r4,#0xc]  ; Correct_Strong
000136  4408              ADD      r0,r0,r1
000138  60e0              STR      r0,[r4,#0xc]  ; Correct_Strong
;;;190    	
;;;191    	REG_CorrectionV=EEPROM_READ_Byte(0x0D);
00013a  200d              MOVS     r0,#0xd
00013c  f7fffffe          BL       EEPROM_READ_Byte
000140  4d97              LDR      r5,|L1.928|
000142  8028              STRH     r0,[r5,#0]
;;;192    	REG_CorrectionV=REG_CorrectionV<<8;
000144  8828              LDRH     r0,[r5,#0]  ; Correct_Parametet
000146  f64f76ff          MOV      r6,#0xffff
00014a  ea062000          AND      r0,r6,r0,LSL #8
00014e  8028              STRH     r0,[r5,#0]
;;;193    	REG_CorrectionV=REG_CorrectionV+EEPROM_READ_Byte(0x0E);
000150  200e              MOVS     r0,#0xe
000152  f7fffffe          BL       EEPROM_READ_Byte
000156  8829              LDRH     r1,[r5,#0]  ; Correct_Parametet
000158  4408              ADD      r0,r0,r1
00015a  8028              STRH     r0,[r5,#0]
;;;194    	
;;;195    	REG_CorrectionV1=EEPROM_READ_Byte(0x44);
00015c  2044              MOVS     r0,#0x44
00015e  f7fffffe          BL       EEPROM_READ_Byte
000162  8328              STRH     r0,[r5,#0x18]
;;;196    	REG_CorrectionV1=REG_CorrectionV1<<8;
000164  8b28              LDRH     r0,[r5,#0x18]  ; Correct_Parametet
000166  ea062000          AND      r0,r6,r0,LSL #8
00016a  8328              STRH     r0,[r5,#0x18]
;;;197    	REG_CorrectionV1=REG_CorrectionV1+EEPROM_READ_Byte(0x45);
00016c  2045              MOVS     r0,#0x45
00016e  f7fffffe          BL       EEPROM_READ_Byte
000172  8b29              LDRH     r1,[r5,#0x18]  ; Correct_Parametet
000174  4408              ADD      r0,r0,r1
000176  8328              STRH     r0,[r5,#0x18]
;;;198    	
;;;199    	REG_CorrectionA=EEPROM_READ_Byte(0x0F);
000178  200f              MOVS     r0,#0xf
00017a  f7fffffe          BL       EEPROM_READ_Byte
00017e  8068              STRH     r0,[r5,#2]
;;;200    	REG_CorrectionA=REG_CorrectionA<<8;
000180  8868              LDRH     r0,[r5,#2]  ; Correct_Parametet
000182  ea062000          AND      r0,r6,r0,LSL #8
000186  8068              STRH     r0,[r5,#2]
;;;201    	REG_CorrectionA=REG_CorrectionA+EEPROM_READ_Byte(0x10);
000188  2010              MOVS     r0,#0x10
00018a  f7fffffe          BL       EEPROM_READ_Byte
00018e  8869              LDRH     r1,[r5,#2]  ; Correct_Parametet
000190  4408              ADD      r0,r0,r1
000192  8068              STRH     r0,[r5,#2]
;;;202    	
;;;203    	REG_CorrectionA1=EEPROM_READ_Byte(0x37);
000194  2037              MOVS     r0,#0x37
000196  f7fffffe          BL       EEPROM_READ_Byte
00019a  80a8              STRH     r0,[r5,#4]
;;;204    	REG_CorrectionA1=REG_CorrectionA1<<8;
00019c  88a8              LDRH     r0,[r5,#4]  ; Correct_Parametet
00019e  ea062000          AND      r0,r6,r0,LSL #8
0001a2  80a8              STRH     r0,[r5,#4]
;;;205    	REG_CorrectionA1=REG_CorrectionA1+EEPROM_READ_Byte(0x38);
0001a4  2038              MOVS     r0,#0x38
0001a6  f7fffffe          BL       EEPROM_READ_Byte
0001aa  88a9              LDRH     r1,[r5,#4]  ; Correct_Parametet
0001ac  4408              ADD      r0,r0,r1
0001ae  80a8              STRH     r0,[r5,#4]
;;;206    	
;;;207    	REG_CorrectionR=EEPROM_READ_Byte(0x11);
0001b0  2011              MOVS     r0,#0x11
0001b2  f7fffffe          BL       EEPROM_READ_Byte
0001b6  80e8              STRH     r0,[r5,#6]
;;;208    	REG_CorrectionR=REG_CorrectionR<<8;
0001b8  88e8              LDRH     r0,[r5,#6]  ; Correct_Parametet
0001ba  ea062000          AND      r0,r6,r0,LSL #8
0001be  80e8              STRH     r0,[r5,#6]
;;;209    	REG_CorrectionR=REG_CorrectionR+EEPROM_READ_Byte(0x12);
0001c0  2012              MOVS     r0,#0x12
0001c2  f7fffffe          BL       EEPROM_READ_Byte
0001c6  88e9              LDRH     r1,[r5,#6]  ; Correct_Parametet
0001c8  4408              ADD      r0,r0,r1
0001ca  80e8              STRH     r0,[r5,#6]
;;;210    	
;;;211    	Polar=EEPROM_READ_Byte(0x13);
0001cc  2013              MOVS     r0,#0x13
0001ce  f7fffffe          BL       EEPROM_READ_Byte
0001d2  8128              STRH     r0,[r5,#8]
;;;212    	Polar3=EEPROM_READ_Byte(0x46);
0001d4  2046              MOVS     r0,#0x46
0001d6  f7fffffe          BL       EEPROM_READ_Byte
0001da  82e8              STRH     r0,[r5,#0x16]
;;;213    /*******************设置参数读取****************************/
;;;214    	SET_ReadV_Offset=EEPROM_READ_Byte(0x14);
0001dc  2014              MOVS     r0,#0x14
0001de  f7fffffe          BL       EEPROM_READ_Byte
0001e2  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;215    	SET_ReadV_Offset=SET_ReadV_Offset<<8;
0001e4  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001e6  0200              LSLS     r0,r0,#8
0001e8  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;216    	SET_ReadV_Offset=SET_ReadV_Offset+EEPROM_READ_Byte(0x15);
0001ea  2015              MOVS     r0,#0x15
0001ec  f7fffffe          BL       EEPROM_READ_Byte
0001f0  6921              LDR      r1,[r4,#0x10]  ; Correct_Strong
0001f2  4408              ADD      r0,r0,r1
0001f4  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;217    	SET_ReadV_Offset=SET_ReadV_Offset<<8;
0001f6  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001f8  0200              LSLS     r0,r0,#8
0001fa  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;218    	SET_ReadV_Offset=SET_ReadV_Offset+EEPROM_READ_Byte(0x16);
0001fc  2016              MOVS     r0,#0x16
0001fe  f7fffffe          BL       EEPROM_READ_Byte
000202  6921              LDR      r1,[r4,#0x10]  ; Correct_Strong
000204  4408              ADD      r0,r0,r1
000206  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;219    	SET_ReadV_Offset=SET_ReadV_Offset<<8;
000208  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
00020a  0200              LSLS     r0,r0,#8
00020c  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;220    	SET_ReadV_Offset=SET_ReadV_Offset+EEPROM_READ_Byte(0x17);
00020e  2017              MOVS     r0,#0x17
000210  f7fffffe          BL       EEPROM_READ_Byte
000214  6921              LDR      r1,[r4,#0x10]  ; Correct_Strong
000216  4408              ADD      r0,r0,r1
000218  6120              STR      r0,[r4,#0x10]  ; Correct_Strong
;;;221    	
;;;222    	SET_ReadA_Offset=EEPROM_READ_Byte(0x18);
00021a  2018              MOVS     r0,#0x18
00021c  f7fffffe          BL       EEPROM_READ_Byte
000220  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;223    	SET_ReadA_Offset=SET_ReadA_Offset<<8;
000222  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
000224  0200              LSLS     r0,r0,#8
000226  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;224    	SET_ReadA_Offset=SET_ReadA_Offset+EEPROM_READ_Byte(0x19);
000228  2019              MOVS     r0,#0x19
00022a  f7fffffe          BL       EEPROM_READ_Byte
00022e  6961              LDR      r1,[r4,#0x14]  ; Correct_Strong
000230  4408              ADD      r0,r0,r1
000232  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;225    	SET_ReadA_Offset=SET_ReadA_Offset<<8;
000234  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
000236  0200              LSLS     r0,r0,#8
000238  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;226    	SET_ReadA_Offset=SET_ReadA_Offset+EEPROM_READ_Byte(0x1A);
00023a  201a              MOVS     r0,#0x1a
00023c  f7fffffe          BL       EEPROM_READ_Byte
000240  6961              LDR      r1,[r4,#0x14]  ; Correct_Strong
000242  4408              ADD      r0,r0,r1
000244  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;227    	SET_ReadA_Offset=SET_ReadA_Offset<<8;
000246  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
000248  0200              LSLS     r0,r0,#8
00024a  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;228    	SET_ReadA_Offset=SET_ReadA_Offset+EEPROM_READ_Byte(0x1B);
00024c  201b              MOVS     r0,#0x1b
00024e  f7fffffe          BL       EEPROM_READ_Byte
000252  6961              LDR      r1,[r4,#0x14]  ; Correct_Strong
000254  4408              ADD      r0,r0,r1
000256  6160              STR      r0,[r4,#0x14]  ; Correct_Strong
;;;229    	
;;;230    	SET_ReadA1_Offset=EEPROM_READ_Byte(0x39);
000258  2039              MOVS     r0,#0x39
00025a  f7fffffe          BL       EEPROM_READ_Byte
00025e  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;231    	SET_ReadA1_Offset=SET_ReadA1_Offset<<8;
000260  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000262  0200              LSLS     r0,r0,#8
000264  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;232    	SET_ReadA1_Offset=SET_ReadA1_Offset+EEPROM_READ_Byte(0x3A);
000266  203a              MOVS     r0,#0x3a
000268  f7fffffe          BL       EEPROM_READ_Byte
00026c  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
00026e  4408              ADD      r0,r0,r1
000270  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;233    	SET_ReadA1_Offset=SET_ReadA1_Offset<<8;
000272  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000274  0200              LSLS     r0,r0,#8
000276  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;234    	SET_ReadA1_Offset=SET_ReadA1_Offset+EEPROM_READ_Byte(0x3B);
000278  203b              MOVS     r0,#0x3b
00027a  f7fffffe          BL       EEPROM_READ_Byte
00027e  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
000280  4408              ADD      r0,r0,r1
000282  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;235    	SET_ReadA1_Offset=SET_ReadA1_Offset<<8;
000284  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000286  0200              LSLS     r0,r0,#8
000288  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;236    	SET_ReadA1_Offset=SET_ReadA1_Offset+EEPROM_READ_Byte(0x3C);
00028a  203c              MOVS     r0,#0x3c
00028c  f7fffffe          BL       EEPROM_READ_Byte
000290  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
000292  4408              ADD      r0,r0,r1
000294  61a0              STR      r0,[r4,#0x18]  ; Correct_Strong
;;;237    	
;;;238    	SET_CorrectionV=EEPROM_READ_Byte(0x1C);
000296  201c              MOVS     r0,#0x1c
000298  f7fffffe          BL       EEPROM_READ_Byte
00029c  8168              STRH     r0,[r5,#0xa]
;;;239    	SET_CorrectionV=SET_CorrectionV<<8;
00029e  8968              LDRH     r0,[r5,#0xa]  ; Correct_Parametet
0002a0  ea062000          AND      r0,r6,r0,LSL #8
0002a4  8168              STRH     r0,[r5,#0xa]
;;;240    	SET_CorrectionV=SET_CorrectionV+EEPROM_READ_Byte(0x1D);
0002a6  201d              MOVS     r0,#0x1d
0002a8  f7fffffe          BL       EEPROM_READ_Byte
0002ac  8969              LDRH     r1,[r5,#0xa]  ; Correct_Parametet
0002ae  4408              ADD      r0,r0,r1
0002b0  8168              STRH     r0,[r5,#0xa]
;;;241    	
;;;242    	SET_CorrectionA=EEPROM_READ_Byte(0x1E);
0002b2  201e              MOVS     r0,#0x1e
0002b4  f7fffffe          BL       EEPROM_READ_Byte
0002b8  81a8              STRH     r0,[r5,#0xc]
;;;243    	SET_CorrectionA=SET_CorrectionA<<8;
0002ba  89a8              LDRH     r0,[r5,#0xc]  ; Correct_Parametet
0002bc  ea062000          AND      r0,r6,r0,LSL #8
0002c0  81a8              STRH     r0,[r5,#0xc]
;;;244    	SET_CorrectionA=SET_CorrectionA+EEPROM_READ_Byte(0x1F);
0002c2  201f              MOVS     r0,#0x1f
0002c4  f7fffffe          BL       EEPROM_READ_Byte
0002c8  89a9              LDRH     r1,[r5,#0xc]  ; Correct_Parametet
0002ca  4408              ADD      r0,r0,r1
0002cc  81a8              STRH     r0,[r5,#0xc]
;;;245    	
;;;246    	SET_CorrectionA1=EEPROM_READ_Byte(0x3D);
0002ce  203d              MOVS     r0,#0x3d
0002d0  f7fffffe          BL       EEPROM_READ_Byte
0002d4  81e8              STRH     r0,[r5,#0xe]
;;;247    	SET_CorrectionA1=SET_CorrectionA1<<8;
0002d6  89e8              LDRH     r0,[r5,#0xe]  ; Correct_Parametet
0002d8  ea062000          AND      r0,r6,r0,LSL #8
0002dc  81e8              STRH     r0,[r5,#0xe]
;;;248    	SET_CorrectionA1=SET_CorrectionA1+EEPROM_READ_Byte(0x3E);
0002de  203e              MOVS     r0,#0x3e
0002e0  f7fffffe          BL       EEPROM_READ_Byte
0002e4  89e9              LDRH     r1,[r5,#0xe]  ; Correct_Parametet
0002e6  4408              ADD      r0,r0,r1
0002e8  81e8              STRH     r0,[r5,#0xe]
;;;249    	
;;;250    	
;;;251    	Polar1=EEPROM_READ_Byte(0x20);
0002ea  2020              MOVS     r0,#0x20
0002ec  f7fffffe          BL       EEPROM_READ_Byte
0002f0  8268              STRH     r0,[r5,#0x12]
;;;252    	
;;;253    	CON_CorrectionA=EEPROM_READ_Byte(0x21);
0002f2  2021              MOVS     r0,#0x21
0002f4  f7fffffe          BL       EEPROM_READ_Byte
0002f8  8228              STRH     r0,[r5,#0x10]
;;;254    	CON_CorrectionA=CON_CorrectionA<<8;
0002fa  8a28              LDRH     r0,[r5,#0x10]  ; Correct_Parametet
0002fc  ea062000          AND      r0,r6,r0,LSL #8
000300  8228              STRH     r0,[r5,#0x10]
;;;255    	CON_CorrectionA=CON_CorrectionA+EEPROM_READ_Byte(0x22);
000302  2022              MOVS     r0,#0x22
000304  f7fffffe          BL       EEPROM_READ_Byte
000308  8a29              LDRH     r1,[r5,#0x10]  ; Correct_Parametet
00030a  4408              ADD      r0,r0,r1
00030c  8228              STRH     r0,[r5,#0x10]
;;;256    	
;;;257    	CON_ReadA_Offset=EEPROM_READ_Byte(0x23);
00030e  2023              MOVS     r0,#0x23
000310  f7fffffe          BL       EEPROM_READ_Byte
000314  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;258    	CON_ReadA_Offset=CON_ReadA_Offset<<8;
000316  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
000318  0200              LSLS     r0,r0,#8
00031a  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;259    	CON_ReadA_Offset=CON_ReadA_Offset+EEPROM_READ_Byte(0x24);
00031c  2024              MOVS     r0,#0x24
00031e  f7fffffe          BL       EEPROM_READ_Byte
000322  69e1              LDR      r1,[r4,#0x1c]  ; Correct_Strong
000324  4408              ADD      r0,r0,r1
000326  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;260    	CON_ReadA_Offset=CON_ReadA_Offset<<8;
000328  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
00032a  0200              LSLS     r0,r0,#8
00032c  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;261    	CON_ReadA_Offset=CON_ReadA_Offset+EEPROM_READ_Byte(0x25);
00032e  2025              MOVS     r0,#0x25
000330  f7fffffe          BL       EEPROM_READ_Byte
000334  69e1              LDR      r1,[r4,#0x1c]  ; Correct_Strong
000336  4408              ADD      r0,r0,r1
000338  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;262    	CON_ReadA_Offset=CON_ReadA_Offset<<8;
00033a  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
00033c  0200              LSLS     r0,r0,#8
00033e  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;263    	CON_ReadA_Offset=CON_ReadA_Offset+EEPROM_READ_Byte(0x26);
000340  2026              MOVS     r0,#0x26
000342  f7fffffe          BL       EEPROM_READ_Byte
000346  69e1              LDR      r1,[r4,#0x1c]  ; Correct_Strong
000348  4408              ADD      r0,r0,r1
00034a  61e0              STR      r0,[r4,#0x1c]  ; Correct_Strong
;;;264    	Polar2=EEPROM_READ_Byte(0x27);
00034c  2027              MOVS     r0,#0x27
00034e  f7fffffe          BL       EEPROM_READ_Byte
000352  82a8              STRH     r0,[r5,#0x14]
;;;265    	
;;;266    /*****************读取关机前设置值*************************/
;;;267    	//SET_Voltage=EEPROM_READ_Byte(0x2A);
;;;268    	//SET_Voltage=SET_Voltage<<8;
;;;269    	//SET_Voltage=SET_Voltage+EEPROM_READ_Byte(0x2B);
;;;270    	
;;;271    	//SET_Current=EEPROM_READ_Byte(0x2C);
;;;272    	//SET_Current=SET_Current<<8;
;;;273    	//SET_Current=SET_Current+EEPROM_READ_Byte(0x2D);
;;;274    	
;;;275    	TEMP_OFFSET=EEPROM_READ_Byte(0x28);
000354  2028              MOVS     r0,#0x28
000356  f7fffffe          BL       EEPROM_READ_Byte
00035a  4c12              LDR      r4,|L1.932|
00035c  8020              STRH     r0,[r4,#0]
;;;276    	TEMP_OFFSET=TEMP_OFFSET<<8;
00035e  8820              LDRH     r0,[r4,#0]  ; TEMP_OFFSET
000360  ea062000          AND      r0,r6,r0,LSL #8
000364  8020              STRH     r0,[r4,#0]
;;;277    	TEMP_OFFSET=TEMP_OFFSET+EEPROM_READ_Byte(0x29);
000366  2029              MOVS     r0,#0x29
000368  f7fffffe          BL       EEPROM_READ_Byte
00036c  8821              LDRH     r1,[r4,#0]  ; TEMP_OFFSET
00036e  4408              ADD      r0,r0,r1
000370  8020              STRH     r0,[r4,#0]
;;;278    
;;;279    /*****************读取蜂鸣器状态*************************/
;;;280    	//Beep_Flag=EEPROM_READ_Byte(0x2E);
;;;281    	//t_beep=EEPROM_READ_Byte(0x2F);
;;;282    	//if(Beep_Flag==0xff)
;;;283    	//{
;;;284    		//Flag_Beep_OFF=1;
;;;285    	//}
;;;286    	///else
;;;287    	//{
;;;288    		//Flag_Beep_OFF=0;
;;;289    	//}
;;;290    	t_lock=EEPROM_READ_Byte(0x30);
000372  2030              MOVS     r0,#0x30
000374  f7fffffe          BL       EEPROM_READ_Byte
000378  490b              LDR      r1,|L1.936|
00037a  7008              STRB     r0,[r1,#0]
;;;291    	/***************读本机地址*********************************/
;;;292    	ADDR=EEPROM_READ_Byte(0x31);
00037c  2031              MOVS     r0,#0x31
00037e  f7fffffe          BL       EEPROM_READ_Byte
000382  490a              LDR      r1,|L1.940|
000384  7008              STRB     r0,[r1,#0]
;;;293    	OFFSET_Zore=EEPROM_READ_Byte(0x32);
000386  2032              MOVS     r0,#0x32
000388  f7fffffe          BL       EEPROM_READ_Byte
00038c  4908              LDR      r1,|L1.944|
00038e  7008              STRB     r0,[r1,#0]
;;;294    	if(OFFSET_Zore>10)
000390  7808              LDRB     r0,[r1,#0]  ; OFFSET_Zore
000392  280a              CMP      r0,#0xa
000394  d901              BLS      |L1.922|
;;;295    	{
;;;296    		OFFSET_Zore=0;
000396  2000              MOVS     r0,#0
000398  7008              STRB     r0,[r1,#0]
                  |L1.922|
;;;297    	}
;;;298    }
00039a  bd70              POP      {r4-r6,pc}
;;;299    /****************************************************************************/
                          ENDP

                  |L1.924|
                          DCD      Correct_Strong
                  |L1.928|
                          DCD      Correct_Parametet
                  |L1.932|
                          DCD      TEMP_OFFSET
                  |L1.936|
                          DCD      t_lock
                  |L1.940|
                          DCD      ADDR
                  |L1.944|
                          DCD      OFFSET_Zore

                          AREA ||i.Flash_Write_all||, CODE, READONLY, ALIGN=2

                  Flash_Write_all PROC
;;;23     //==================================================================//
;;;24     void Flash_Write_all (void)
000000  b538              PUSH     {r3-r5,lr}
;;;25     {
;;;26     	vu8 data_8bit;
;;;27     /***********************测量数据存储****************************/
;;;28       data_8bit = REG_ReadV_Offset >> 24;
000002  4cd0              LDR      r4,|L2.836|
000004  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000006  0e00              LSRS     r0,r0,#24
000008  9000              STR      r0,[sp,#0]
;;;29     	EEPROM_WriteByte(0x01, data_8bit);
00000a  f89d1000          LDRB     r1,[sp,#0]
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       EEPROM_WriteByte
;;;30     	data_8bit = REG_ReadV_Offset >> 16;
000014  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000016  0c00              LSRS     r0,r0,#16
000018  9000              STR      r0,[sp,#0]
;;;31     	EEPROM_WriteByte(0x02, data_8bit);
00001a  f89d1000          LDRB     r1,[sp,#0]
00001e  2002              MOVS     r0,#2
000020  f7fffffe          BL       EEPROM_WriteByte
;;;32     	data_8bit = REG_ReadV_Offset >> 8;
000024  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000026  0a00              LSRS     r0,r0,#8
000028  9000              STR      r0,[sp,#0]
;;;33     	EEPROM_WriteByte(0x03, data_8bit);
00002a  f89d1000          LDRB     r1,[sp,#0]
00002e  2003              MOVS     r0,#3
000030  f7fffffe          BL       EEPROM_WriteByte
;;;34     	EEPROM_WriteByte(0x04, REG_ReadV_Offset);//测量电压
000034  6820              LDR      r0,[r4,#0]  ; Correct_Strong
000036  b2c1              UXTB     r1,r0
000038  2004              MOVS     r0,#4
00003a  f7fffffe          BL       EEPROM_WriteByte
;;;35     	
;;;36     	data_8bit = REG_ReadA_Offset >> 24;
00003e  6860              LDR      r0,[r4,#4]  ; Correct_Strong
000040  0e00              LSRS     r0,r0,#24
000042  9000              STR      r0,[sp,#0]
;;;37     	EEPROM_WriteByte(0x05, data_8bit);
000044  f89d1000          LDRB     r1,[sp,#0]
000048  2005              MOVS     r0,#5
00004a  f7fffffe          BL       EEPROM_WriteByte
;;;38     	data_8bit = REG_ReadA_Offset >> 16;
00004e  6860              LDR      r0,[r4,#4]  ; Correct_Strong
000050  0c00              LSRS     r0,r0,#16
000052  9000              STR      r0,[sp,#0]
;;;39     	EEPROM_WriteByte(0x06, data_8bit);
000054  f89d1000          LDRB     r1,[sp,#0]
000058  2006              MOVS     r0,#6
00005a  f7fffffe          BL       EEPROM_WriteByte
;;;40     	data_8bit = REG_ReadA_Offset >> 8;
00005e  6860              LDR      r0,[r4,#4]  ; Correct_Strong
000060  0a00              LSRS     r0,r0,#8
000062  9000              STR      r0,[sp,#0]
;;;41     	EEPROM_WriteByte(0x07, data_8bit);
000064  f89d1000          LDRB     r1,[sp,#0]
000068  2007              MOVS     r0,#7
00006a  f7fffffe          BL       EEPROM_WriteByte
;;;42     	EEPROM_WriteByte(0x08, REG_ReadA_Offset);//电源电流
00006e  6860              LDR      r0,[r4,#4]  ; Correct_Strong
000070  b2c1              UXTB     r1,r0
000072  2008              MOVS     r0,#8
000074  f7fffffe          BL       EEPROM_WriteByte
;;;43     	
;;;44     	data_8bit = REG_ReadA1_Offset >> 24;
000078  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
00007a  0e00              LSRS     r0,r0,#24
00007c  9000              STR      r0,[sp,#0]
;;;45     	EEPROM_WriteByte(0x33, data_8bit);
00007e  f89d1000          LDRB     r1,[sp,#0]
000082  2033              MOVS     r0,#0x33
000084  f7fffffe          BL       EEPROM_WriteByte
;;;46     	data_8bit = REG_ReadA1_Offset >> 16;
000088  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
00008a  0c00              LSRS     r0,r0,#16
00008c  9000              STR      r0,[sp,#0]
;;;47     	EEPROM_WriteByte(0x34, data_8bit);
00008e  f89d1000          LDRB     r1,[sp,#0]
000092  2034              MOVS     r0,#0x34
000094  f7fffffe          BL       EEPROM_WriteByte
;;;48     	data_8bit = REG_ReadA1_Offset >> 8;
000098  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
00009a  0a00              LSRS     r0,r0,#8
00009c  9000              STR      r0,[sp,#0]
;;;49     	EEPROM_WriteByte(0x35, data_8bit);
00009e  f89d1000          LDRB     r1,[sp,#0]
0000a2  2035              MOVS     r0,#0x35
0000a4  f7fffffe          BL       EEPROM_WriteByte
;;;50     	EEPROM_WriteByte(0x36, REG_ReadA1_Offset);//负载电流
0000a8  68a0              LDR      r0,[r4,#8]  ; Correct_Strong
0000aa  b2c1              UXTB     r1,r0
0000ac  2036              MOVS     r0,#0x36
0000ae  f7fffffe          BL       EEPROM_WriteByte
;;;51     	
;;;52     	data_8bit = REG_ReadR_Offset >> 24;
0000b2  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
0000b4  0e00              LSRS     r0,r0,#24
0000b6  9000              STR      r0,[sp,#0]
;;;53     	EEPROM_WriteByte(0x09, data_8bit);
0000b8  f89d1000          LDRB     r1,[sp,#0]
0000bc  2009              MOVS     r0,#9
0000be  f7fffffe          BL       EEPROM_WriteByte
;;;54     	data_8bit = REG_ReadR_Offset >> 16;
0000c2  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
0000c4  0c00              LSRS     r0,r0,#16
0000c6  9000              STR      r0,[sp,#0]
;;;55     	EEPROM_WriteByte(0x0A, data_8bit);
0000c8  f89d1000          LDRB     r1,[sp,#0]
0000cc  200a              MOVS     r0,#0xa
0000ce  f7fffffe          BL       EEPROM_WriteByte
;;;56     	data_8bit = REG_ReadR_Offset >> 8;
0000d2  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
0000d4  0a00              LSRS     r0,r0,#8
0000d6  9000              STR      r0,[sp,#0]
;;;57     	EEPROM_WriteByte(0x0B, data_8bit);
0000d8  f89d1000          LDRB     r1,[sp,#0]
0000dc  200b              MOVS     r0,#0xb
0000de  f7fffffe          BL       EEPROM_WriteByte
;;;58     	EEPROM_WriteByte(0x0C, REG_ReadR_Offset);//内阻
0000e2  68e0              LDR      r0,[r4,#0xc]  ; Correct_Strong
0000e4  b2c1              UXTB     r1,r0
0000e6  200c              MOVS     r0,#0xc
0000e8  f7fffffe          BL       EEPROM_WriteByte
;;;59     	
;;;60     	data_8bit = REG_ReadV1_Offset >> 24;
0000ec  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
0000ee  0e00              LSRS     r0,r0,#24
0000f0  9000              STR      r0,[sp,#0]
;;;61     	EEPROM_WriteByte(0x40, data_8bit);
0000f2  f89d1000          LDRB     r1,[sp,#0]
0000f6  2040              MOVS     r0,#0x40
0000f8  f7fffffe          BL       EEPROM_WriteByte
;;;62     	data_8bit = REG_ReadV1_Offset >> 16;
0000fc  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
0000fe  0c00              LSRS     r0,r0,#16
000100  9000              STR      r0,[sp,#0]
;;;63     	EEPROM_WriteByte(0x41, data_8bit);
000102  f89d1000          LDRB     r1,[sp,#0]
000106  2041              MOVS     r0,#0x41
000108  f7fffffe          BL       EEPROM_WriteByte
;;;64     	data_8bit = REG_ReadV1_Offset >> 8;
00010c  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
00010e  0a00              LSRS     r0,r0,#8
000110  9000              STR      r0,[sp,#0]
;;;65     	EEPROM_WriteByte(0x42, data_8bit);
000112  f89d1000          LDRB     r1,[sp,#0]
000116  2042              MOVS     r0,#0x42
000118  f7fffffe          BL       EEPROM_WriteByte
;;;66     	EEPROM_WriteByte(0x43, REG_ReadV1_Offset);//电源电压*
00011c  6a20              LDR      r0,[r4,#0x20]  ; Correct_Strong
00011e  b2c1              UXTB     r1,r0
000120  2043              MOVS     r0,#0x43
000122  f7fffffe          BL       EEPROM_WriteByte
;;;67     	
;;;68     	data_8bit=REG_CorrectionV>>8;
000126  4d88              LDR      r5,|L2.840|
000128  8828              LDRH     r0,[r5,#0]  ; Correct_Parametet
00012a  0a00              LSRS     r0,r0,#8
00012c  9000              STR      r0,[sp,#0]
;;;69     	EEPROM_WriteByte(0x0D, data_8bit);
00012e  f89d1000          LDRB     r1,[sp,#0]
000132  200d              MOVS     r0,#0xd
000134  f7fffffe          BL       EEPROM_WriteByte
;;;70     	EEPROM_WriteByte(0x0E, REG_CorrectionV);
000138  8828              LDRH     r0,[r5,#0]  ; Correct_Parametet
00013a  b2c1              UXTB     r1,r0
00013c  200e              MOVS     r0,#0xe
00013e  f7fffffe          BL       EEPROM_WriteByte
;;;71     	
;;;72     	data_8bit=REG_CorrectionA>>8;
000142  8868              LDRH     r0,[r5,#2]  ; Correct_Parametet
000144  0a00              LSRS     r0,r0,#8
000146  9000              STR      r0,[sp,#0]
;;;73     	EEPROM_WriteByte(0x0F, data_8bit);
000148  f89d1000          LDRB     r1,[sp,#0]
00014c  200f              MOVS     r0,#0xf
00014e  f7fffffe          BL       EEPROM_WriteByte
;;;74     	EEPROM_WriteByte(0x10, REG_CorrectionA);
000152  8868              LDRH     r0,[r5,#2]  ; Correct_Parametet
000154  b2c1              UXTB     r1,r0
000156  2010              MOVS     r0,#0x10
000158  f7fffffe          BL       EEPROM_WriteByte
;;;75     	
;;;76     	data_8bit=REG_CorrectionA1>>8;
00015c  88a8              LDRH     r0,[r5,#4]  ; Correct_Parametet
00015e  0a00              LSRS     r0,r0,#8
000160  9000              STR      r0,[sp,#0]
;;;77     	EEPROM_WriteByte(0x37, data_8bit);
000162  f89d1000          LDRB     r1,[sp,#0]
000166  2037              MOVS     r0,#0x37
000168  f7fffffe          BL       EEPROM_WriteByte
;;;78     	EEPROM_WriteByte(0x38, REG_CorrectionA1);
00016c  88a8              LDRH     r0,[r5,#4]  ; Correct_Parametet
00016e  b2c1              UXTB     r1,r0
000170  2038              MOVS     r0,#0x38
000172  f7fffffe          BL       EEPROM_WriteByte
;;;79     	
;;;80     	data_8bit=REG_CorrectionR>>8;
000176  88e8              LDRH     r0,[r5,#6]  ; Correct_Parametet
000178  0a00              LSRS     r0,r0,#8
00017a  9000              STR      r0,[sp,#0]
;;;81     	EEPROM_WriteByte(0x11, data_8bit);
00017c  f89d1000          LDRB     r1,[sp,#0]
000180  2011              MOVS     r0,#0x11
000182  f7fffffe          BL       EEPROM_WriteByte
;;;82     	EEPROM_WriteByte(0x12, REG_CorrectionR);
000186  88e8              LDRH     r0,[r5,#6]  ; Correct_Parametet
000188  b2c1              UXTB     r1,r0
00018a  2012              MOVS     r0,#0x12
00018c  f7fffffe          BL       EEPROM_WriteByte
;;;83     	
;;;84     	data_8bit=REG_CorrectionV1>>8;
000190  8b28              LDRH     r0,[r5,#0x18]  ; Correct_Parametet
000192  0a00              LSRS     r0,r0,#8
000194  9000              STR      r0,[sp,#0]
;;;85     	EEPROM_WriteByte(0x44, data_8bit);
000196  f89d1000          LDRB     r1,[sp,#0]
00019a  2044              MOVS     r0,#0x44
00019c  f7fffffe          BL       EEPROM_WriteByte
;;;86     	EEPROM_WriteByte(0x45, REG_CorrectionV1);//电源电压*
0001a0  8b28              LDRH     r0,[r5,#0x18]  ; Correct_Parametet
0001a2  b2c1              UXTB     r1,r0
0001a4  2045              MOVS     r0,#0x45
0001a6  f7fffffe          BL       EEPROM_WriteByte
;;;87     	
;;;88     	EEPROM_WriteByte(0x13,Polar);
0001aa  8928              LDRH     r0,[r5,#8]  ; Correct_Parametet
0001ac  b2c1              UXTB     r1,r0
0001ae  2013              MOVS     r0,#0x13
0001b0  f7fffffe          BL       EEPROM_WriteByte
;;;89     	EEPROM_WriteByte(0x46,Polar3);//电源电压*
0001b4  8ae8              LDRH     r0,[r5,#0x16]  ; Correct_Parametet
0001b6  b2c1              UXTB     r1,r0
0001b8  2046              MOVS     r0,#0x46
0001ba  f7fffffe          BL       EEPROM_WriteByte
;;;90     /***********************设置数据存储****************************/
;;;91     	data_8bit = SET_ReadV_Offset >> 24;
0001be  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001c0  0e00              LSRS     r0,r0,#24
0001c2  9000              STR      r0,[sp,#0]
;;;92     	EEPROM_WriteByte(0x14, data_8bit);
0001c4  f89d1000          LDRB     r1,[sp,#0]
0001c8  2014              MOVS     r0,#0x14
0001ca  f7fffffe          BL       EEPROM_WriteByte
;;;93     	data_8bit = SET_ReadV_Offset >> 16;
0001ce  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001d0  0c00              LSRS     r0,r0,#16
0001d2  9000              STR      r0,[sp,#0]
;;;94     	EEPROM_WriteByte(0x15, data_8bit);
0001d4  f89d1000          LDRB     r1,[sp,#0]
0001d8  2015              MOVS     r0,#0x15
0001da  f7fffffe          BL       EEPROM_WriteByte
;;;95     	data_8bit = SET_ReadV_Offset >> 8;
0001de  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001e0  0a00              LSRS     r0,r0,#8
0001e2  9000              STR      r0,[sp,#0]
;;;96     	EEPROM_WriteByte(0x16, data_8bit);
0001e4  f89d1000          LDRB     r1,[sp,#0]
0001e8  2016              MOVS     r0,#0x16
0001ea  f7fffffe          BL       EEPROM_WriteByte
;;;97     	EEPROM_WriteByte(0x17, SET_ReadV_Offset);
0001ee  6920              LDR      r0,[r4,#0x10]  ; Correct_Strong
0001f0  b2c1              UXTB     r1,r0
0001f2  2017              MOVS     r0,#0x17
0001f4  f7fffffe          BL       EEPROM_WriteByte
;;;98     	
;;;99     	data_8bit = SET_ReadA_Offset >> 24;
0001f8  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
0001fa  0e00              LSRS     r0,r0,#24
0001fc  9000              STR      r0,[sp,#0]
;;;100    	EEPROM_WriteByte(0x18, data_8bit);
0001fe  f89d1000          LDRB     r1,[sp,#0]
000202  2018              MOVS     r0,#0x18
000204  f7fffffe          BL       EEPROM_WriteByte
;;;101    	data_8bit = SET_ReadA_Offset >> 16;
000208  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
00020a  0c00              LSRS     r0,r0,#16
00020c  9000              STR      r0,[sp,#0]
;;;102    	EEPROM_WriteByte(0x19, data_8bit);
00020e  f89d1000          LDRB     r1,[sp,#0]
000212  2019              MOVS     r0,#0x19
000214  f7fffffe          BL       EEPROM_WriteByte
;;;103    	data_8bit = SET_ReadA_Offset >> 8;
000218  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
00021a  0a00              LSRS     r0,r0,#8
00021c  9000              STR      r0,[sp,#0]
;;;104    	EEPROM_WriteByte(0x1A, data_8bit);
00021e  f89d1000          LDRB     r1,[sp,#0]
000222  201a              MOVS     r0,#0x1a
000224  f7fffffe          BL       EEPROM_WriteByte
;;;105    	EEPROM_WriteByte(0x1B, SET_ReadA_Offset);
000228  6960              LDR      r0,[r4,#0x14]  ; Correct_Strong
00022a  b2c1              UXTB     r1,r0
00022c  201b              MOVS     r0,#0x1b
00022e  f7fffffe          BL       EEPROM_WriteByte
;;;106    	
;;;107    	data_8bit = SET_ReadA1_Offset >> 24;
000232  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000234  0e00              LSRS     r0,r0,#24
000236  9000              STR      r0,[sp,#0]
;;;108    	EEPROM_WriteByte(0x39, data_8bit);
000238  f89d1000          LDRB     r1,[sp,#0]
00023c  2039              MOVS     r0,#0x39
00023e  f7fffffe          BL       EEPROM_WriteByte
;;;109    	data_8bit = SET_ReadA1_Offset >> 16;
000242  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000244  0c00              LSRS     r0,r0,#16
000246  9000              STR      r0,[sp,#0]
;;;110    	EEPROM_WriteByte(0x3A, data_8bit);
000248  f89d1000          LDRB     r1,[sp,#0]
00024c  203a              MOVS     r0,#0x3a
00024e  f7fffffe          BL       EEPROM_WriteByte
;;;111    	data_8bit = SET_ReadA1_Offset >> 8;
000252  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000254  0a00              LSRS     r0,r0,#8
000256  9000              STR      r0,[sp,#0]
;;;112    	EEPROM_WriteByte(0x3B, data_8bit);
000258  f89d1000          LDRB     r1,[sp,#0]
00025c  203b              MOVS     r0,#0x3b
00025e  f7fffffe          BL       EEPROM_WriteByte
;;;113    	EEPROM_WriteByte(0x3C, SET_ReadA1_Offset);
000262  69a0              LDR      r0,[r4,#0x18]  ; Correct_Strong
000264  b2c1              UXTB     r1,r0
000266  203c              MOVS     r0,#0x3c
000268  f7fffffe          BL       EEPROM_WriteByte
;;;114    	
;;;115    	data_8bit=SET_CorrectionV>>8;
00026c  8968              LDRH     r0,[r5,#0xa]  ; Correct_Parametet
00026e  0a00              LSRS     r0,r0,#8
000270  9000              STR      r0,[sp,#0]
;;;116    	EEPROM_WriteByte(0x1C, data_8bit);
000272  f89d1000          LDRB     r1,[sp,#0]
000276  201c              MOVS     r0,#0x1c
000278  f7fffffe          BL       EEPROM_WriteByte
;;;117    	EEPROM_WriteByte(0x1D, SET_CorrectionV);
00027c  8968              LDRH     r0,[r5,#0xa]  ; Correct_Parametet
00027e  b2c1              UXTB     r1,r0
000280  201d              MOVS     r0,#0x1d
000282  f7fffffe          BL       EEPROM_WriteByte
;;;118    	
;;;119    	data_8bit=SET_CorrectionA>>8;
000286  89a8              LDRH     r0,[r5,#0xc]  ; Correct_Parametet
000288  0a00              LSRS     r0,r0,#8
00028a  9000              STR      r0,[sp,#0]
;;;120    	EEPROM_WriteByte(0x1E, data_8bit);
00028c  f89d1000          LDRB     r1,[sp,#0]
000290  201e              MOVS     r0,#0x1e
000292  f7fffffe          BL       EEPROM_WriteByte
;;;121    	EEPROM_WriteByte(0x1F, SET_CorrectionA);
000296  89a8              LDRH     r0,[r5,#0xc]  ; Correct_Parametet
000298  b2c1              UXTB     r1,r0
00029a  201f              MOVS     r0,#0x1f
00029c  f7fffffe          BL       EEPROM_WriteByte
;;;122    	
;;;123    	data_8bit=SET_CorrectionA1>>8;
0002a0  89e8              LDRH     r0,[r5,#0xe]  ; Correct_Parametet
0002a2  0a00              LSRS     r0,r0,#8
0002a4  9000              STR      r0,[sp,#0]
;;;124    	EEPROM_WriteByte(0x3D, data_8bit);
0002a6  f89d1000          LDRB     r1,[sp,#0]
0002aa  203d              MOVS     r0,#0x3d
0002ac  f7fffffe          BL       EEPROM_WriteByte
;;;125    	EEPROM_WriteByte(0x3E, SET_CorrectionA1);
0002b0  89e8              LDRH     r0,[r5,#0xe]  ; Correct_Parametet
0002b2  b2c1              UXTB     r1,r0
0002b4  203e              MOVS     r0,#0x3e
0002b6  f7fffffe          BL       EEPROM_WriteByte
;;;126    	
;;;127    	EEPROM_WriteByte(0x20,Polar1);
0002ba  8a68              LDRH     r0,[r5,#0x12]  ; Correct_Parametet
0002bc  b2c1              UXTB     r1,r0
0002be  2020              MOVS     r0,#0x20
0002c0  f7fffffe          BL       EEPROM_WriteByte
;;;128    /***********************************************************/
;;;129    	data_8bit=CON_CorrectionA>>8;
0002c4  8a28              LDRH     r0,[r5,#0x10]  ; Correct_Parametet
0002c6  0a00              LSRS     r0,r0,#8
0002c8  9000              STR      r0,[sp,#0]
;;;130    	EEPROM_WriteByte(0x21, data_8bit);
0002ca  f89d1000          LDRB     r1,[sp,#0]
0002ce  2021              MOVS     r0,#0x21
0002d0  f7fffffe          BL       EEPROM_WriteByte
;;;131    	EEPROM_WriteByte(0x22, CON_CorrectionA);
0002d4  8a28              LDRH     r0,[r5,#0x10]  ; Correct_Parametet
0002d6  b2c1              UXTB     r1,r0
0002d8  2022              MOVS     r0,#0x22
0002da  f7fffffe          BL       EEPROM_WriteByte
;;;132    	
;;;133    	data_8bit = CON_ReadA_Offset >> 24;
0002de  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
0002e0  0e00              LSRS     r0,r0,#24
0002e2  9000              STR      r0,[sp,#0]
;;;134    	EEPROM_WriteByte(0x23, data_8bit);
0002e4  f89d1000          LDRB     r1,[sp,#0]
0002e8  2023              MOVS     r0,#0x23
0002ea  f7fffffe          BL       EEPROM_WriteByte
;;;135    	data_8bit = CON_ReadA_Offset >> 16;
0002ee  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
0002f0  0c00              LSRS     r0,r0,#16
0002f2  9000              STR      r0,[sp,#0]
;;;136    	EEPROM_WriteByte(0x24, data_8bit);
0002f4  f89d1000          LDRB     r1,[sp,#0]
0002f8  2024              MOVS     r0,#0x24
0002fa  f7fffffe          BL       EEPROM_WriteByte
;;;137    	data_8bit = CON_ReadA_Offset >> 8;
0002fe  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
000300  0a00              LSRS     r0,r0,#8
000302  9000              STR      r0,[sp,#0]
;;;138    	EEPROM_WriteByte(0x25, data_8bit);
000304  f89d1000          LDRB     r1,[sp,#0]
000308  2025              MOVS     r0,#0x25
00030a  f7fffffe          BL       EEPROM_WriteByte
;;;139    	EEPROM_WriteByte(0x26, CON_ReadA_Offset);
00030e  69e0              LDR      r0,[r4,#0x1c]  ; Correct_Strong
000310  b2c1              UXTB     r1,r0
000312  2026              MOVS     r0,#0x26
000314  f7fffffe          BL       EEPROM_WriteByte
;;;140    	
;;;141    	EEPROM_WriteByte(0x27,Polar2);
000318  8aa8              LDRH     r0,[r5,#0x14]  ; Correct_Parametet
00031a  b2c1              UXTB     r1,r0
00031c  2027              MOVS     r0,#0x27
00031e  f7fffffe          BL       EEPROM_WriteByte
;;;142    	
;;;143    	data_8bit=TEMP_OFFSET>>8;
000322  4c0a              LDR      r4,|L2.844|
000324  8820              LDRH     r0,[r4,#0]  ; TEMP_OFFSET
000326  0a00              LSRS     r0,r0,#8
000328  9000              STR      r0,[sp,#0]
;;;144    	EEPROM_WriteByte(0x28, data_8bit);
00032a  f89d1000          LDRB     r1,[sp,#0]
00032e  2028              MOVS     r0,#0x28
000330  f7fffffe          BL       EEPROM_WriteByte
;;;145    	EEPROM_WriteByte(0x29, TEMP_OFFSET);
000334  8820              LDRH     r0,[r4,#0]  ; TEMP_OFFSET
000336  e8bd4038          POP      {r3-r5,lr}
00033a  b2c1              UXTB     r1,r0
00033c  2029              MOVS     r0,#0x29
00033e  f7ffbffe          B.W      EEPROM_WriteByte
;;;146    }
;;;147    //===========================================================================//
                          ENDP

000342  0000              DCW      0x0000
                  |L2.836|
                          DCD      Correct_Strong
                  |L2.840|
                          DCD      Correct_Parametet
                  |L2.844|
                          DCD      TEMP_OFFSET

                          AREA ||i.Wite_adress||, CODE, READONLY, ALIGN=2

                  Wite_adress PROC
;;;328    /************************************************************************/
;;;329    void Wite_adress(void)
000000  4802              LDR      r0,|L3.12|
;;;330    {
;;;331    	EEPROM_WriteByte(0x31,ADDR);
000002  7801              LDRB     r1,[r0,#0]  ; ADDR
000004  2031              MOVS     r0,#0x31
000006  f7ffbffe          B.W      EEPROM_WriteByte
;;;332    }
;;;333    /******************* (C) COPYRIGHT 2015 AVER *****END OF FILE*************************/
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      ADDR

                          AREA ||i.Wrtite_Beep||, CODE, READONLY, ALIGN=2

                  Wrtite_Beep PROC
;;;322    /*****************************************************************************/
;;;323    void Wrtite_Beep(void)//保存BEEP状态至FLASH中
000000  b510              PUSH     {r4,lr}
;;;324    {
;;;325    	EEPROM_WriteByte(0x2E, Beep_Flag);
000002  4806              LDR      r0,|L4.28|
000004  7801              LDRB     r1,[r0,#0]  ; Beep_Flag
000006  202e              MOVS     r0,#0x2e
000008  f7fffffe          BL       EEPROM_WriteByte
;;;326    	EEPROM_WriteByte(0x2F, t_beep);
00000c  4804              LDR      r0,|L4.32|
00000e  7801              LDRB     r1,[r0,#0]  ; t_beep
000010  e8bd4010          POP      {r4,lr}
000014  202f              MOVS     r0,#0x2f
000016  f7ffbffe          B.W      EEPROM_WriteByte
;;;327    }
;;;328    /************************************************************************/
                          ENDP

00001a  0000              DCW      0x0000
                  |L4.28|
                          DCD      Beep_Flag
                  |L4.32|
                          DCD      t_beep

                          AREA ||i.Wrtite_Lock||, CODE, READONLY, ALIGN=2

                  Wrtite_Lock PROC
;;;317    /******************************************************************************/
;;;318    void Wrtite_Lock(void)
000000  4802              LDR      r0,|L5.12|
;;;319    {
;;;320    	EEPROM_WriteByte(0x30, t_lock);
000002  7801              LDRB     r1,[r0,#0]  ; t_lock
000004  2030              MOVS     r0,#0x30
000006  f7ffbffe          B.W      EEPROM_WriteByte
;;;321    }
;;;322    /*****************************************************************************/
                          ENDP

00000a  0000              DCW      0x0000
                  |L5.12|
                          DCD      t_lock

                          AREA ||i.Wrtite_SetVA||, CODE, READONLY, ALIGN=2

                  Wrtite_SetVA PROC
;;;303    }
;;;304    void Wrtite_SetVA(void)
000000  b538              PUSH     {r3-r5,lr}
;;;305    {
;;;306    	vu8 data_8bit;
;;;307      /*********************************************/
;;;308    	data_8bit = SET_Voltage >> 8;
000002  4c0e              LDR      r4,|L6.60|
000004  8860              LDRH     r0,[r4,#2]  ; Run_Control
000006  0a00              LSRS     r0,r0,#8
000008  9000              STR      r0,[sp,#0]
;;;309    	EEPROM_WriteByte(0x2A, data_8bit);
00000a  f89d1000          LDRB     r1,[sp,#0]
00000e  202a              MOVS     r0,#0x2a
000010  f7fffffe          BL       EEPROM_WriteByte
;;;310    	EEPROM_WriteByte(0x2B, SET_Voltage);
000014  8860              LDRH     r0,[r4,#2]  ; Run_Control
000016  b2c1              UXTB     r1,r0
000018  202b              MOVS     r0,#0x2b
00001a  f7fffffe          BL       EEPROM_WriteByte
;;;311    	
;;;312    	data_8bit = SET_Current >> 8;
00001e  88a0              LDRH     r0,[r4,#4]  ; Run_Control
000020  0a00              LSRS     r0,r0,#8
000022  9000              STR      r0,[sp,#0]
;;;313    	EEPROM_WriteByte(0x2C, data_8bit);
000024  f89d1000          LDRB     r1,[sp,#0]
000028  202c              MOVS     r0,#0x2c
00002a  f7fffffe          BL       EEPROM_WriteByte
;;;314    	EEPROM_WriteByte(0x2D, SET_Current);
00002e  88a0              LDRH     r0,[r4,#4]  ; Run_Control
000030  e8bd4038          POP      {r3-r5,lr}
000034  b2c1              UXTB     r1,r0
000036  202d              MOVS     r0,#0x2d
000038  f7ffbffe          B.W      EEPROM_WriteByte
;;;315    	/********************************************/
;;;316    }
;;;317    /******************************************************************************/
                          ENDP

                  |L6.60|
                          DCD      Run_Control

                          AREA ||i.Wrtite_Zore||, CODE, READONLY, ALIGN=2

                  Wrtite_Zore PROC
;;;299    /****************************************************************************/
;;;300    void Wrtite_Zore(void)
000000  4802              LDR      r0,|L7.12|
;;;301    {
;;;302    	EEPROM_WriteByte(0x32, OFFSET_Zore);
000002  7801              LDRB     r1,[r0,#0]  ; OFFSET_Zore
000004  2032              MOVS     r0,#0x32
000006  f7ffbffe          B.W      EEPROM_WriteByte
;;;303    }
;;;304    void Wrtite_SetVA(void)
                          ENDP

00000a  0000              DCW      0x0000
                  |L7.12|
                          DCD      OFFSET_Zore

;*** Start embedded assembler ***

#line 1 "..\\drive\\flash.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_flash_c_cb7dfbbe____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_flash_c_cb7dfbbe____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_flash_c_cb7dfbbe____REVSH|
#line 144
|__asm___7_flash_c_cb7dfbbe____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
